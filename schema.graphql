schema {
  query: RootQueryType
  mutation: RootMutationType
}

"""Exposes a URL that specifies the behavior of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behavior of this scalar."""
  url: String!
) on SCALAR

type Mission implements Node {
  id: ID!
  dbID: String!
  flightNumber: Int!
  missionName: String!
  launchDate: String
  iconUrl: String
  isFavourite: Boolean!
  previewImageUrl: String!
  webcastLink: String
}

"""A connection to a list of items."""
type MissionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [MissionEdge]

  """Number of page."""
  pageNumber: Int
}

type MissionDetails {
  flightNumber: Int
  missionName: String
  launchDate: String
  iconUrl: String!
  details: String
  launchSuccess: Boolean
  photosLinks: [String!]!
}

"""An edge in a connection."""
type MissionEdge {
  """The item at the end of the edge"""
  node: Mission

  """A cursor for use in pagination"""
  cursor: String!
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type RootMutationType {
  signIn(userName: String!): User!
  updateFavouriteMissions(id: String!, userName: String!): Mission
}

type RootQueryType {
  missionDetails(id: ID!): MissionDetails
  missionConnection(
    userName: String!

    """Returns the items in the list that come after the specified cursor."""
    after: String

    """Returns the first n items from the list."""
    first: Int

    """Returns the items in the list that come before the specified cursor."""
    before: String

    """Returns the last n items from the list."""
    last: Int
  ): MissionConnection
}

type User {
  id: ID!
  name: String!
  favouriteMissions: [String!]!
}

